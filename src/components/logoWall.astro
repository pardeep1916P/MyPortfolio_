---
const technologies = [
  "aws",
  "lambda",
  "apiGateway", 
  "s3 bucket",
  "dynamoDB",
  "cognito",
  "cloudWatch",
  "docker",
  "kubernetes",
  "terraform",
  "githubActions",
  "nodejs",
  "typeScript",
  "vercel",
];

const pngLogos = [
  "aws",
  "lambda", 
  "apiGateway",
  "s3 bucket",
  "dynamoDB",
  "cognito",
  "cloudWatch"
];

const awsServices = [
  "lambda",
  "apiGateway",
  "s3 bucket", 
  "dynamoDB",
  "cognito",
  "cloudWatch"
];
---

<div class="relative overflow-x-hidden py-8">
  <div
    class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-[var(--background)] to-transparent z-20"
  >
  </div>
  <div
    class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-[var(--background)] to-transparent z-20"
  >
  </div>

  <div class="flex scroll-container gap-12 md:gap-20 w-max" id="scroll-container">
    {
      [...technologies, ...technologies, ...technologies].map((tech) => (
        <div class="flex items-center gap-2 group transition-all duration-300">
          <img
            src={pngLogos.includes(tech) ? `/svg/${tech}.png` : `/svg/${tech}.svg`}
            alt={tech}
            class="h-7 w-auto object-contain transition-transform group-hover:scale-110"
            width="30"
            height="30"
            loading="lazy"
            style="filter: none;"
          />
          <span class={`text-lg font-medium ${
            tech === 'aws' ? 'text-[#00D4FF] shiny-aws' : 
            'text-[var(--white-icon)]'
          }`}>
            {tech.charAt(0).toUpperCase() + tech.slice(1)}
          </span>
        </div>
      ))
    }
  </div>
</div>

<style is:global>
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-50%);
    }
  }
  .scroll-container {
    /* Animation handled by JavaScript */
  }

  .shiny-aws {
    background: linear-gradient(135deg, #00D4FF 25%, #FFFFFF 50%, #00D4FF 75%);
    background-size: 400% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: shine-aws 3s linear infinite;
  }

  @keyframes shine-aws {
    0% {
      background-position: 100% 50%;
    }
    30%,
    70% {
      background-position: 0% 50%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const container = document.getElementById('scroll-container');
    let startTime = Date.now();
    let isHovered = false;
    let currentPosition = 0;
    let animationId;
    
    function animate() {
      const now = Date.now();
      const elapsed = (now - startTime) / 1000;
      const duration = isHovered ? 120 : 60; // 120s when hovered, 60s normal
      const progress = (elapsed % duration) / duration;
      currentPosition = -progress * 50; // -50% is the full scroll distance
      
      container.style.transform = `translateX(${currentPosition}%)`;
      animationId = requestAnimationFrame(animate);
    }
    
    container.addEventListener('mouseenter', function() {
      if (!isHovered) {
        isHovered = true;
        startTime = Date.now() - (currentPosition / -50) * 120 * 1000; // Adjust start time for smooth transition
      }
    });
    
    container.addEventListener('mouseleave', function() {
      if (isHovered) {
        isHovered = false;
        startTime = Date.now() - (currentPosition / -50) * 60 * 1000; // Adjust start time for smooth transition
      }
    });
    
    // Start animation
    animate();
  });
</script>


